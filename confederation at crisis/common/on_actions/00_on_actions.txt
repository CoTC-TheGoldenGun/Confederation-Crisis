#character					
on_startup = {					
	events = {				
		maintenance.400 # Clean up government traits			
		maintenance.450 # Default to Absolute Cognatic, not Agantic. It's the future.			
		maintenance.451 # Default to Absolute Cognatic, not Agantic. It's the future.
		maintenance.16 # Princes and princesses
		# maintenance.17 # Surnames # Disabled on 6/17/20 because it was causing weird issues when loading mid/late game.  Many characters would vanish without a trace, including decendants and siblings of landed characters who never received the'flag_valid_surname'.  Characters without a dynasty still receive a dynasty when they are given a title.
		parliaments.001
		narrative.1
					
		# Initial construction capabilities			
		maintenance.100			
		maintenance.101			
		maintenance.102			
		maintenance.103			
		#startup.2
		# startup.3
		HFP.30031 # Set up freckles
		HF.1 # Set up Great Conquerors for Shattered World
		HF.2 # Set up Primogeniture in Shattered World
		GR.30 # Generate random families for characters without		
	}				
}					
					
#character					
on_yearly_pulse = {					
	random_events = {				
		# Crisis Stuff			
		# Implant beta tests			
		100 = cybernetics.10100			
		100 = cybernetics.10200			
		100 = cybernetics.10300			
		100 = cybernetics.10400			
		100 = cybernetics.10500			

		#Job Flavour Events
		100 = 75010
		100 = 75020
		100 = 75030
		100 = 75040
		100 = 75050
		100 = 75060
		100 = 75065
		100 = 75070
		100 = 75075
		100 = 75080
		100 = 75085
		100 = 75090
		100 = 75095
		100 = 75105
		100 = 75110
		100 = 75120					
					
		#Dynasty requests			
		250 = 66000			
		250 = 66050			
		250 = 66100			

		#Bastard Events
		100 = 76000
		100 = 76005
		100 = 76010
		100 = 76015
		100 = 76020
		100 = 76025
		100 = 76030
		100 = 76035
		100 = 76040			
					
		#Ward Events			
		100 = 78000			
		100 = 78005			
		100 = 78010			
		100 = 78015			
		100 = 78020			
		100 = 78025			
		100 = 78030	
		100 = 78018
		100 = HL.10610		
					
		#Various Events			
		# 100 = TOG.3403			
		# 100 = TOG.3401			
		# 100 = TOG.3402			
		100 = volantis.576 # Enemy family has chance to deface statue			
					
		# Feudal Life Events
		100 = 4000
		100 = 4005
		100 = 4010
		100 = 4015
		100 = 4020
		100 = 4035
		100 = 4036
		100 = 4040
		100 = 4041
		100 = 4045
		100 = 4050
		100 = 4055
		100 = 4060
		100 = 4085
		100 = 4110
		100 = 4115
		100 = 4120
		100 = 4125
		100 = 4130
		100 = 4135
		100 = 4145
		100 = 4150
		100 = 4155
		100 = 4175
		
		# Married Life Events
		100 = 30000
		100 = 30001
		100 = 30004
		100 = 30020
		100 = 30021
		100 = 30025
		100 = 30030
		100 = 30040
		100 = 30045
		100 = 30050
		100 = 30051
		100 = 30052
		100 = 30055
		100 = 30056
		100 = 30057
		100 = 30058
		100 = 30059
		100 = 30060
		100 = 30063
		100 = 30066
		100 = 30069
		100 = 30072
		100 = 30075
		100 = 30085
		100 = 30100
		100 = 30105
		100 = 30110
		
		# Old Lover Events (Disabled in "Way of Life")
		100 = 64000 # Confronts spouse about lover. Rivalries, lover lost.
		100 = 64005 # Lover is ill. Give comfort.
		100 = 64006 # Wounded lover. Wound removed.
		100 = 64010 # Teenage infatuation starts.
		100 = 64015 # Wife is old and ugly. Take a mistress?
		100 = 64025 # Fallen in love with spouse
		100 = 64030 # Vacation with lover
		100 = 64035 # Party/hunting/nothing with lover
		100 = 64040 # Ruler confronts spouse about lover

		#Dynasty requests
		#250 = 66000
		250 = 66099 # Landless claimant asks dynasty head to press the claim in a war
		
		#Hedge Knights Events
		100 = 71000 
		100 = 71006 
		
		#Rumours Events
		10 = 69000
		10 = 69003 
		10 = 69010 
		10 = 69014 
		10 = 69020 
		10 = 69023 
		10 = 69030 
		10 = 69037 
		10 = 69040 
		10 = 69043 
		10 = 69050 
		10 = 69052 
		10 = 69054 
		10 = 69056 
		10 = 69058  
		10 = 69060  
		10 = 69063  
		10 = 69070
		10 = 69073
		10 = 69100
		10 = 69095
		
		#Court Events
		100 = 73000
		100 = 73001
		100 = 73002
		100 = 73003
		100 = 73004
		100 = 73005
		100 = 73006
		100 = 73007
		100 = 73008
		100 = 73009
		100 = 73010
		
		#Religious Events
		100 = 39230
		
		#Various Events
		100 = TOG.3403
		100 = TOG.3401
		100 = TOG.3402
		100 = 100019
		100 = 100024
		50 = 79007 # Shieldmaiden training event
		150 = 37250 #Wife of same education offers to help
		
		# Reincarnation: Memories of the previous life
		1000 = RoI.10020
		1000 = RoI.10021
		1000 = RoI.10022
		
		# Indian guru events
		100 = RoI.3100
		100 = RoI.3101
		100 = RoI.3102
		100 = RoI.3103
		100 = RoI.3104
		100 = RoI.3105
		100 = RoI.3106
		100 = RoI.3107
		100 = RoI.3108
		100 = RoI.3109
		100 = RoI.3110
		100 = RoI.3111
		100 = RoI.3112
		100 = RoI.3113
		100 = RoI.3114
		500 = RoI.3200
		500 = RoI.3300
		100 = RoI.3400
		
		# Indian ascetics and yogis
		20 = RoI.203
		20 = RoI.206
		20 = RoI.209
		20 = RoI.193
		
		# Indian story events
		20 = RoI.215
		20 = RoI.20147
		20 = RoI.20164
		
		# Indian minor events
		100 = RoI.157
		100 = RoI.158
		100 = RoI.163
		100 = RoI.180
		100 = RoI.190
		50 = RoI.401
		100 = RoI.403
		100 = RoI.410
		100 = RoI.411
		200 = RoI.412
		500 = RoI.500
		
		# Indian low religious authority events
		50 = RoI.3500
		50 = RoI.3506
		50 = RoI.3510
		50 = RoI.3516
		10 = RoI.3520
		50 = RoI.3530
#		50 = RoI.3536
		
		# Religious tolerance events
		100 = RoI.400
		
		# Way of Life events
		100 = WoL.12506 # Legendary Wisdom
		100 = WoL.12507 # Respected Ruler

		# Hero knight adventure events
#		200 = CM.2010
		200 = CM.2020
#		200 = CM.2100
		
		# Effects of being in hiding
		100 = CM.6100
		100 = CM.6102
		100 = CM.6104
		100 = CM.6106
		100 = CM.6108
		100 = CM.6110
		100 = CM.6112
		100 = CM.6114
		100 = CM.6116
		100 = CM.6118
		100 = CM.6120
		100 = CM.6122
		100 = CM.6124
		100 = CM.6126
		100 = CM.6128
		100 = CM.6130
		100 = CM.6132
		
		#After the End Events
		400 = salvage.120	# randomly find good salvage, or an event related to owned salvage
		
		# Meddling mother events
		100 = CM.1150
		100 = CM.1160
		100 = CM.1170
		100 = CM.1180
		100 = CM.1190
		
		# Other Charlemagne/Carloman
		100 = CM.1130
		
		# Horse Lords Mercenary Events
		300 = HL.10100
		300 = HL.10200
		300 = HL.10210
		300 = HL.10220
		300 = HL.10230
		300 = HL.10240
		300 = HL.10250
		300 = HL.10260
		300 = HL.10270
		300 = HL.10400
		100 = HL.10410
		300 = HL.10500
		300 = HL.10510
		300 = HL.10530
		300 = HL.10600
		
		# Wolf's Blood events
		100 = HL.1010 # Wolf Child found in woods
		100 = HL.1020 # Child lost in woods and is rescued by wolves
		500 = HL.1200 # Call of the Wolves
#		500 = HL.1300 # The Lost Cub
		150 = HL.1400 # Werewolf first occurrence
		1500 = HL.1401 # Werewolf subsequent occurrences
		
		300 = HL.1500 # Become cannibal
		300 = HL.1510 # Howl at the moon
		300 = HL.1520 # Hunter instinct strikes unexpectedly (and awkwardly) at court
		300 = HL.1530 # Hunter instincts in martial training (upgrade martial education)
		300 = HL.1540 # Become strong
		300 = HL.1550 # Cunning as a wolf (quick)
		300 = HL.1560 # Animal instincts take over... (lustful)
		300 = HL.1570 # Pack instinct (gregarious)
		300 = HL.1580 # Wolf is brave (brave)
		300 = HL.1590 # Animal cruelty (cruel)
		300 = HL.1610 # Rabid wolf (wroth)
		300 = HL.1620 # Wolf-face (ugly)
		300 = HL.1630 # Animal mind (lower learning trait level) 
		300 = HL.1640 # Really howl at the moon! (lunatic)
		
		# Horse Lords Horse Events
		800 = HL.6010 # Ward can't ride yet
		100 = HL.6020 # Dangerous river crossing - save spouse or favorite horse?
		100 = HL.6030 # A loyal retinue warrior's family have lost their horses to sickness
		100 = HL.6510 # Your horse gets bitten by another horse
		100 = HL.6520 # Foreign portrait painter offers his services
		
		# Zeus Disobedient Daughter Events
		2000 = ZE.1300 # Disobedient daughter asks to marry lover
		
		# Zeus Councillor Random Events
		300 = ZE.4000 # Marshal suggests new commander
		300 = ZE.4010 # Marshal wants to do experiments with new weaponry
		200 = ZE.4100 # Marshal on mission turns against liege
		100 = ZE.4120 # Marshal - abuse of office, runs protection racket in province
		
		100 = ZE.5000 # Zealous Lord Spiritual asks to go and proselytize among heathens
		200 = ZE.5010 # Zealous Lord Spiritual insists in building more temple holdings, willing to donate own money
		300 = ZE.5020 # Lord Spiritual on mission turns disloyal
		100 = ZE.5030 # Lord Spiritual - abuse of office - charges money from populace for godly favor
		500 = ZE.5040 # Craven or Cynical Lord Spiritual complains about dangerous mission to convert heathens
		
		
		100 = ZE.3000 # Steward takes loan to cover up incompetence
		100 = ZE.3002 # Steward makes extra money because of high stewardship
		100 = ZE.3004 # Steward offers to make statue for liege
		100 = ZE.3011 # Steward offers to teach liege 
		
		100 = ZE.2060 # Councillor steals money from the realm coffers
		
		100 = ZE.2020 # Chancellor tries to teach ruler foreign languages
		100 = ZE.2030 # Chancellor sets up bureaucratic scheme to get hearings with the ruler
		
		100 = ZE.2070 # Spymaster uses realm spynetwork to blackmail people
		100 = ZE.2075 # Spymaster tries to improve spy defenses

		#Alliance events
		100 = ZE.8000
		100 = ZE.8010
		300 = ZE.9100

		#Favor events
		100 = ZE.8100 # Drank too much and fell
		100 = ZE.8110 # Vassal arguing with spouse
		100 = ZE.23000 # Councillor is Overburden with Work
		100 = ZE.23005 # Troublesome Peasants
		100 = ZE.22300 # Pardon a young noble
		200 = ZE.22400 # Voter saves another voters face at a Council Meeting
		200 = ZE.22500 # Godly voter shows you how to be more pious
		100 = ZE.22600 # Ask foreign voter for help
		200 = ZE.22700 # Give land to an unlanded friend for a favor
		200 = ZE.22800 # Offer to train your Liege's commanders
		
		#Dynamic mercenary events
		50 = ZE.23150 # Band Leader Speaks Highly of Employer
		
		#AI secretly convert event
		35 = MNM.3948 # Convert to spouse/friend/province

		#Female councillors
		100 = 77777 # Visit from talented woman
		100 = 77790 # Female relative wants to get on council
		150 = 77760 # Female vassal wants to get on council

		#End of days events
		50 = RIP.14000

		#Chess with death
		25 = RIP.30220
		
		#Immortal vassal crisis
		25 = RIP.30315
		50 = RIP.30318
		#Immortal rival
		25 = RIP.30300

		#Gamebook
		100 = GBC.1 # Making a friend in mourning
		
		#Physician Flavor events
		100 = RIP.4010 # Court Physician recommends that you "Take it Easy"
		100 = RIP.4011 # Court Physician gifts you a guide dog
		200 = RIP.4013 # Court Physician suggests fertility treatment
		100 = RIP.4020 # Court Physician Friend teaches you medicine
		100 = RIP.4022 # Court Physician suggests you implement provincial apothecaries (prosperity boost)
		100 = RIP.4030 # Court Physician asks for patronage
		200 = RIP.4040 # Court Physician training event
		200 = RIP.4100 # A Physician-Missionary arrives in a Tribal or Nomadic Court
		
		#Random Prosperity Increasing Events
		125 = RIP.4300 # Steward suggests building new roads
		125 = RIP.4301 # Lord Spiritual suggests building shrines
		125 = RIP.4302 # Marshal suggests building outposts
		125 = RIP.4303 # Spymaster suggests setting up local messenger stations
		125 = RIP.4304 # Chancellor suggests sponsoring local harvest festivals
		125 = RIP.4305 # You decide upon personally visiting a province
		
		#Maimed Flavor events
		100 = RIP.29100 # Disfigured events
		100 = RIP.29200 # One-eyed events
		100 = RIP.29300 # One-handed events
		100 = RIP.29400	# One-legged events
		100 = RIP.29511 # Close relation taking care of you
		
		#Hospital events
		100 = RIP.4501 # Pilgrim physician arrives
		100 = RIP.4504 # Perform charity
		100 = RIP.4512 # Religious heads demand money for hospital presence
		75 = RIP.4514 # Leper arrives at court
		100 = RIP.4520 # Soup kitchen is damaged
		100 = RIP.4530 # Court physician seek learning at hospital
		
		#Pet events
		100 = 77850 # Cat event tombula
		150 = 77860 # Cat makes you happy
		25 = 6360 #Mittens

		#Monks and Mystics events
		100 = MNM.9000 # Artifact rumor
		100 = MNM.3910 # Commission painting
		30 = MNM.7829 # AI-only disciple recruitment	
		
		
		#Artifact events
		500 = MNM.9816 # Blessed Mantle allows you to make Water of the Blessed Mantle (-> logic)

		#Get this shit out of here
		
		20 = JD.2100 # Chance of Religious Liberation CB
		
		150 = JD.4100
		
		# Holy Fury Flavor
		200 = HFP.1 # Giant-trait character gains Frail or Brawny
		200 = HFP.4 # Giant-trait character gets health problems
		100 = HFP.30000 # Family member confronts you about your drinking
		20 = HFP.30010 # Giant-trait character keeps hitting their head on doorways
		100 = HFP.30020 # Court Physician offers you a potion that might stop you being depressed
				
		#Wonder Flavor Events 
		100 = LT.20001 # Lost Book event chain, 
		100 = LT.60101 # Library lets you write cooler book
		100 = LT.60301 # Tavern lets you blow off stress
		100 = LT.60501 # Opinion boost from your liege if you have a wonder in your province
		100 = LT.60601 # A part of the wonder has fallen off!
		100 = LT.60701 # Chance to pick some cool herbs

		# Court events
		100 = LT.61006 # Decide nickname (court maintenance)
		150 = LT.10103 # Courtiers praise your hospitality
		
		5000 = 0 # Chance of no yearly event
		
		friends_rivals_adults = {
			delay = 36
			20000 = 0
			
			1500 = 100050 # A girl at court is very flirtatious and seems to get away with everything... - Formerly 80 month MTTH
			1500 = 100105 # Crusaders becomes friends/rivals - Formerly 80 month MTTH
			1500 = 100110 # Crusaders becomes friends/rivals - Formerly 80 month MTTH
			1500 = 100115 # Sharing the wonders of childbearing has made you a new friend - Formerly 80 month MTTH
			1500 = 100160 # I'm at war and need help! - Formerly 80 month MTTH
			1500 = 100180 # My friend is a heretic/infidel! - Formerly 80 month MTTH
			1500 = 100190 # My friend is a much better diplomat than me, ask for help? - Formerly 80 month MTTH
			1500 = 100200 # My friend has much better martial stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100210 # My friend has much better stewardship stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100220 # My friend has much better intrigue stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100230 # My friend has much better learning stats than me, ask for help? - Formerly 80 month MTTH
			1500 = 100550 # My friend has much better learning stats than me, ask for help? Muslim - Formerly 80 month MTTH
			1250 = 100520 # Poison rival during liege's feast - Formerly 100 month MTTH
			1000 = 100150 # Friend at war - send help? - Formerly 120 month MTTH
			750 = 100240 # My friend is celibate - Formerly 200 month MTTH
			750 = 100250 # My friend is a hedonist - Formerly 200 month MTTH
			750 = 100260 # My friend is a scholar - Formerly 200 month MTTH
			750 = 100400 # My friend's rival tried to kill/maim/wound him/her! - Formerly 200 month MTTH
			750 = 100420 # Accuse rival of cheating in tournament - Formerly 200 month MTTH
			500 = 100170 # My friend's friend is my friend - Formerly 240 month MTTH
			350 = 100440 # Your fierce rival has embraced heretical ways - Formerly 300 month MTTH
			350 = 100450 # Make your liege distrust your rival - Formerly 300 month MTTH
			350 = 100460 # My rival is homosexual! - Formerly 300 month MTTH
			350 = 100470 # A rival of yours is so much beneath you that it seems a bit silly of you to hold him as an enemy - Formerly 300 month MTTH
			350 = 100480 # Your rivalry to your liege is straining your commitment to your feudal duties  - Formerly 300 month MTTH
			350 = 100510 # Root tries to wound rival during hunt  - Formerly 300 month MTTH
			100 = 100530 # Revenge seeker seeks revenge - Formerly 500 month MTTH
			100 = 100540 # Son seeks revenge for his father - Formerly 500 month MTTH
			50 = 100350 # I don't recognize my friend anymore, I don't know if we really are friends... - Formerly 1000 month MTTH
			25 = 100410 # I ask permission to challenge my rival into a duel - Formerly 1500 month MTTH
		}
		
		# Former MTTH Events
		100 = TOG.3109 # Son wants to join the Varangians (Son) - Formerly 200 month MTTH
		100 = TOG.3111 # Son stays in Greece with wife (Son) - Formerly 200 month MTTH
		120 = TOG.3114 # Son returns scarred but seasoned (Son) - Formerly 160 month MTTH
		110 = TOG.3116 # Son returns with notions of Greek love (Son) - Formerly 180 month MTTH
		75 = TOG.3118 # Son returns castrated and blinded (Son) - Formerly 250 month MTTH
		120 = TOG.3120 # Son returns as excellent strategist (Son) - Formerly 160 month MTTH
		110 = TOG.3122 # Son returns with PTSD (Son) - Formerly 180 month MTTH
		110 = TOG.3124 # Son returns home with Greek wife (Son) - Formerly 180 month MTTH
		120 = TOG.3126 # Son returns home as a Christian zealot (Son) - Formerly 160 month MTTH
		140 = TOG.3128 # Son returns home as a seasoned warrior (Son) - Formerly 120 month MTTH
		100 = TOG.3130 # Son dies in battle (Son) - Formerly 200 month MTTH
		120 = TOG.3132 # Son returns with loot (Son) - Formerly 160 month MTTH
		50 = SoA.5219 # Donate to local monastery - Formerly 2000 month MTTH

		5000 = 0 # Chance of no yearly event
		
		#Celtic Flavor
		100 = ancrel.1260 # fennid arrested by marshal, catholics only (why?)
		100 = ancrel.1254 # fian visiting your court
		
		# mirgrated from crisis_on_actions
		# Imperial Decadence Events		
		research_project_progress = {
			100 = lifestyle.1011 # Minor breakthrough
			10 = lifestyle.1411 # Moderate breakthrough
			1 = lifestyle.1811 # Major breakthrough
		}
		research_progress_collaboration = {
			10 = 0
			1 = lifestyle.2211
			1 = lifestyle.2411
		}		
		new_raptors_for_falconers = {
			delay = 90
			640 = 0
			10 = lifestyle.1114 # Female Peregrine Falcon
			10 = lifestyle.1214 # Male Peregrine Falcon
			50 = lifestyle.1314 # Peregrine Falcons Mate
			10 = lifestyle.1614 # Female Golden Eagle
			10 = lifestyle.1714 # Male Golden Eagle
			50 = lifestyle.1814 # Golden Eagles Mate
			10 = lifestyle.2114 # Female Red-Tail
			10 = lifestyle.2214 # Male Red-Tail
			50 = lifestyle.2314 # Red-Tails Mate
			10 = lifestyle.2614 # Lancelot Wyvern
			10 = lifestyle.2714 # Lancelot Wyvern spawns
			10 = lifestyle.3114 # Female Kitehawk
			10 = lifestyle.3214 # Male Kitehawk
			50 = lifestyle.3314 # Kitehawks mate
			10 = lifestyle.3614 # Female Nightwing
			10 = lifestyle.3714 # Male Nightwing
			50 = lifestyle.3814 # Nightwings mae
			10 = lifestyle.4114 # Female Tindalos
			10 = lifestyle.4214 # Male Tindalos
			50 = lifestyle.4314 # Tindaloses mate
			10 = lifestyle.4614 # Female Janus
			10 = lifestyle.4714 # Male Janus
			50 = lifestyle.4814 # Januses mate
			10 = lifestyle.5114 # Raptor drone
		}
	}				
	events = { 				
		volantis.1 #Triarch election			
					

		
		maintenance.10
		maintenance.11
		maintenance.12
		maintenance.13
		maintenance.14
		maintenance.15
		maintenance.16
		marriage.0
		marriage.2000
		marriage.3000
		
		# Update the senate yearly
		
		ZE.1100 # Disobedient daughter is unhappy
		ZE.9000 # Ally not contributing in war
		ZE.10000 # Mercenary event tombula
		
		# mirgrated from crisis_on_actions
		63106 # (Safety flag clearance check event)		
		
		43306 #Yearly check for tyranny from going against council					
		
		PerformancePlus.900 # Councillor tries to befriend liege		
		PerformanceSoA.4020 # Character converts to local religion		
		PerformancePlus.910 # Duelist tries to befriend liege		
		Performance.941 # Reinforcements Arrive		
		Performance320.500 # Prosperity Increase		
		Performance320.502 # Peasant Obstructionism		
		
		
		reeducation.199 #Choose education path
		reeducation.7 #Courtier Education Trait
		reeducation.8 #Steward Education Trait
		reeducation.9 #Martial Education Trait
		reeducation.10 #No Education Trait
		lifestyle.15014 # Training raptors for falconry
	}				
}					
					
					
#character					
on_bi_yearly_pulse = {					
	events = {				

		government.3350
		lovers.100
		
		maintenance.900
		
		6061
		health.6061
		government.3250
		government.3300
		#government.3350
		government.3400
		
		
		laws.201
		
		maintenance.1
		maintenance.2
		maintenance.100
		maintenance.101
		maintenance.102
		maintenance.103
		maintenance.200
		maintenance.201
		#maintenance.450
		#maintenance.451
		#maintenance.500
		Plus.3000
		Plus.3001
		Plus.3002
		Plus.3003
		Plus.3004
		Plus.3005
		
		RIP.10012 # Check for plague notifications
		RIP.11700 # Prosperity system
		RIP.5050 # Scurvy event
		RIP.30316 # clean up immortal crisis 
		RIP.30317 # immortal crisis spreads
	}				
	random_events = {			
					
		#Various Traits Events			
		10 = 65000			
		10 = 65001			
		10 = 65003			
		10 = 65005			
		10 = 65007			
		10 = 65009			
		10 = 65166			
		10 = 65011			
		10 = 65020			
		10 = 65021			
		10 = 65022			
		10 = 65023			
		10 = 65030			
		10 = 65031			
		10 = 65032			
		10 = 65033			
		10 = 65034			
		10 = 65035			
		10 = 65036			
		10 = 65037			
		10 = 65040			
		10 = 65041			
		10 = 65042			
		10 = 65043			
		10 = 65165			
		10 = 65044			
		10 = 65045			
		10 = 65048			
		10 = 65049			
		10 = 65050			
		10 = 65051			
		10 = 65052			
		10 = 65053			
		10 = 65055			
		10 = 65057			
		10 = 65060			
		10 = 65061			
		10 = 65065			
		10 = 65070			
		10 = 65071			
		10 = 65072			
		10 = 65074			
		10 = 65080			
		10 = 65081			
		10 = 65085			
		10 = 65090			
		10 = 65095			
		10 = 65100			
		10 = 65101			
		10 = 65102			
		10 = 65105			
		10 = 65106			
		10 = 65107			
		10 = 65110			
		10 = 65115			
		10 = 65120			
		10 = 65125			
		10 = 65126			
		10 = 65130			
		10 = 65135			
		10 = 65140			
		10 = 65145			
		10 = 65150			
		10 = 65155			
		10 = 65160			
					
		#Lifestyle events			
		10 = 3520			
		10 = 3525			
		10 = 3530			
		10 = 3535			
		10 = 3540			
		10 = 3543			
		10 = 3546			
		10 = 3550			
		10 = 3555			
		10 = 3560			
		10 = 3563			
		10 = 3568			
		10 = 3570			
		10 = 3575			
		10 = 3585			
		10 = 3590			
		10 = 3593			
		10 = 3600			
		10 = 3605			
		10 = 3610			
		10 = 3615			
		10 = 3620			
		10 = 3625			
		10 = 3630			
		10 = 3635			
		10 = 3640			
		10 = 3645			
		10 = 3650			
		10 = 3655			
		10 = 3660			
		10 = 3665			
		10 = 3675			
		10 = 3680			
		10 = 3685			
		10 = 3690			
		10 = 3700			
					
		2000 = 0 # Chance of no bi-yearly event	

		# mirgrated from crisis_on_actions
		gain_lifestyle_trait = {
			5000 = 0
			10 = lifestyle.10 # Gardener
			10 = lifestyle.11 # Intellectual
			10 = lifestyle.12 # Athlete
			10 = lifestyle.13 # Hunter
			10 = lifestyle.14 # Falconer
			10 = lifestyle.15 # Writer
			10 = lifestyle.16 # Artist
			10 = lifestyle.17 # Duelist
			10 = lifestyle.18 # Mystic
			10 = lifestyle.19 # Gamer
			# Influence by friends
			500 = lifestyle.110
			500 = lifestyle.111
			500 = lifestyle.112
			500 = lifestyle.113
			500 = lifestyle.114
			500 = lifestyle.115
			500 = lifestyle.116
			500 = lifestyle.117
			500 = lifestyle.118
			500 = lifestyle.119
		}		
	}				
}					
					
#character					
on_five_year_pulse = {
	events = {
		GR.1
		MNM.10030 # Have AI characters join societies
		#HFP.20604 # Hidden check for physique_variable.
		HF.99 # Legendary warrior arrives		
		HF.10050 # Warrior Lodges: Maintenance: AIs joins available warrior lodges
		#LoR.45 #Augustus trait cleanup.
		HF.21997 #AI picks Antagonizing target.
		HF.21998 #AI picks Swaying target.
		HF.24129 # Knights and Bards arrive.
		HF.24132 # Lady seeks protection.
		HF.24236 # Artists arrive.
		#HF.15100 # Rain/Drought status changes in most of Africa
		
		lifestyle.20010 # Kill off plants that aren't properly cared for.
				
		maintenance.200		
		health.6041
		health.6070
		laws.200		
	}					
	random_events = {				
		#----  misc traits needing revision below...			
					
					
					
		#Brave			
		10 = 3320			
		10 = 3325			
		10 = 3330			
		10 = 3335			
		10 = 3740			
					
		#Shy			
		10 = 3340			
		10 = 3345			
		10 = 3350			
		10 = 3355			
					
		#Ambitious			
		10 = 3360			
		10 = 3365			
		10 = 3370			
		10 = 3375			
		10 = 3371			
					
		#Content			
		10 = 3380			
		10 = 3385			
		10 = 3390			
		10 = 3395			
		10 = 3745			
					
		#Arbitrary			
		10 = 3400			
		10 = 3405			
		10 = 3410			
		10 = 3415			
		10 = 3411			
					
		#Just			
		10 = 3420			
		10 = 3425			
		10 = 3430			
		10 = 3435			
					
		#Cynical			
		10 = 3440			
		10 = 3445			
		10 = 3450			
		10 = 3455			
		10 = 3456			
					
		#Zealous			
		10 = 3460			
		10 = 3465			
		10 = 3470			
		10 = 3475			
		10 = 3476			
		10 = 3750			
		10 = 3755			
					
		#Trusting			
		10 = 3500			
		10 = 3505			
		10 = 3510			
		10 = 3515			
					
		#Personality Traits			
		10 = 1000			
		10 = 1001			
		10 = 1002			
		10 = 1003			
		10 = 1004			
		10 = 1005			
		10 = 1006			
		10 = 1007			
		10 = 1008			
		10 = 1009			
		10 = 1010			
		10 = 1011			
		10 = 1012			
		10 = 1013			
		10 = 1014			
		10 = 1015			
		10 = 1016			
		10 = 1017			
		10 = 1018			
		10 = 1019			
		10 = 1028			
		10 = 1029			
		10 = 1030			
		10 = 1031			
		10 = 1032			
		10 = 1033			
		10 = 1034			
		10 = 1035			
		10 = 1036			
		10 = 1037			
		10 = 1038			
		10 = 1039			
		10 = 1040			
		10 = 1041			
		10 = 1042			
		10 = 1043			
		10 = 1044			
		10 = 1045			
		10 = 1046			
		10 = 1047			
		10 = 1048			
		10 = 1049			
		10 = 1050			
		10 = 1051			
		10 = 1052			
		10 = 1053			
		10 = 1054			
		10 = 1057			
		10 = 1058			
		10 = 1060			
		10 = 1070			
		10 = 3264			
		10 = 3730			
		10 = 3735			
					
		40 = 0
		
		#10 = flavor.100 ##Cannot use on_actions with events that have MTTH, it causes spam of the event. On_actions use weight multipliers instead.
		#10 = flavor.200
		#10 =     flavor.210
		#10 = flavor.220
		#10 =     flavor.230
		#10 = flavor.235
		#10 = flavor.240
		#10 = flavor.250
		#10 = flavor.260
		#10 = flavor.270
		#10 = flavor.280
		10 = flavor.282
		10 =     flavor.283
		#10 = flavor.300
		#10 = flavor.400
		#10 = flavor.500 
		#10 = flavor.600
		#10 = flavor.650
		#10 = flavor.700
		#10 = flavor.750
		#10 = flavor.800
		#10 = flavor.900
		#10 = flavor.1000
		#10 = flavor.1100

	}							
}					
					
#character					
on_decade_pulse = {					
		events = { 					
	    6060
		health.6060
		
	}			
}					
					
# For characters 2 to 16 years old					
on_yearly_childhood_pulse = {					
	random_events = {				
		# Childhood Personality Events			
					
		# 6 - 12: Personality-forming events			
		100 = childhood_education.10 # Curious			
		100 = childhood_education.20 # Cautious			
		100 = childhood_education.30 # Disciplined			
		100 = childhood_education.40 # Carefree			
		100 = childhood_education.50 # Extroverted			
		100 = childhood_education.60 # Introverted			
		100 = childhood_education.70 # Friendly			
		100 = childhood_education.80 # Cold			
		100 = childhood_education.90 # Spiritual			
		100 = childhood_education.100 # Skeptical			
		100 = childhood_education.110 # Radical			
		100 = childhood_education.120 # Pragmatic			
		100 = childhood_education.130 # Humble			
		100 = childhood_education.140 # Proud			
		100 = childhood_education.150 # Content			
		100 = childhood_education.160 # Ambitious			
		100 = childhood_education.170 # Brave			
		100 = childhood_education.180 # Craven			
					
		# Conversions			
		50 = childhood_education.200			
		50 = childhood_education.300			
					
		1500 = 0
		
		# Childhood Personality Events
		
		#Age 6-16, aiming to get at least 4 traits before adult.
		100 = 1500
		100 = 1510
		100 = 1520
		100 = 1530
		100 = 1540
		100 = 1550
		100 = 1560
		100 = 1570
		100 = 1580
		100 = 1590
		100 = 1600
		100 = 1610
		100 = 1620
		100 = 1630
		100 = 1640
		100 = 1650
		100 = 1660
		100 = 1670
		100 = 1680
		100 = 1690
		100 = 1700
		100 = 1710
		100 = 1720
		100 = 1730
		100 = 1965
		100 = 1632
		100 = 1732
		5000 = RoI.10010 # Acknowledged reincarnated child acquires trait from previous personality
		
		#Toddler flavour events (age 2-5), not very common, but some will get them.
		10 = 1900 
		10 = 1901
		10 = 1902
		10 = 1903
		10 = 1904
		
		#Young children flavour events, (age 6-10), not very common, but some will get then..
		20 = 1905
		20 = 1906
		20 = 1907
		20 = 1908
		20 = 1909
		20 = 1910
		20 = 1911
		20 = 1912
		
		#Youngsters flavour events (age 11-15), not very common, but some will get then..
		50 = 1913
		50 = 1914
		50 = 1915
		50 = 1916
		50 = 1917
		50 = 1918
		50 = 1919
		50 = 1920
		50 = 1921
		50 = 1922
		50 = 1923
		50 = 1924
		50 = 1925
		50 = 1926
		50 = 1927
		50 = 1928
		50 = 1929
		50 = 1930
		50 = 1931
		50 = 1932
		50 = 1933
		50 = 1934
		50 = 1935
		
		#Friends rival flavour events moved from MTTH to childhood pulse.
		1000 = 100005
		1000 = 100015
	}				
}					
					
# Yearly pulse (six months from on_yearly_pulse) intended for Focus events (only fires for characters with a Focus)					
# DISABLED FOR NOW					
on_focus_pulse = {
	random_events = {
		1000 = 0
		
		# Family Focus
		300 = WoL.3010 # Relations with spouse improve
		200 = WoL.3020 # Relations with sibling improve
		400 = WoL.3030 # Relations with parent improve
		400 = WoL.3040 # Relations with child improve
		200 = WoL.3048 # Relations between two close relatives improve
		200 = WoL.3059 # Relations between two non-adult children improve
		
		# Theology Focus
		500 = WoL.7000 # Study religious myths?
		200 = WoL.7010 # Befriend priest through your religious interest
		200 = WoL.7020 # Visit holy site and speak with priests there (not Muslims, Christians, Jews or Indians)
		200 = WoL.7030 # Reflect on own life and how it relates to the gods.
		200 = WoL.7040 # Theologian's view of other religions - can gain Sympathy for other faiths
		200 = WoL.7050 # Question own faith - can gain Cynical or Zealous
		50 = WoL.7060 # Embrace heresy? Zealous characters only. Can lose the trait or become heretic.
		400 = WoL.7070 # Embrace theologian lifestyle?
		200 = WoL.7080 # Mystical experience - lose Depressed and Stressed
		200 = WoL.7090 # Meditation/Prayer in Seclusion - Go into hiding for a week. Lose Drunkard, Gluttonous and Lustful and possible gain Temperate and Chaste (depending on religion). Tiny Chance of restored eyesight or cured illness.
	
		# Hunting focus
		200 = WoL.5000 # Epic Hunt chain start
		200 = WoL.5200 # Receive hunting dog
		200 = WoL.5210 # Dog makes you happy
		200 = WoL.5211 # Dog makes you popular
		200 = WoL.5220 # Train your dog?
		200 = WoL.5230 # Bad dog kills other dog
		200 = WoL.5231 # Bad dog kills or wounds courtier
		
		# War Focus
		120 = WoL.11300 # Improved martial education
		120 = WoL.11301 # Leader Trait gained: Troop type specialist
		120 = WoL.11302 # Leader Trait gained: Terrain/climate specialist
		120 = WoL.11303 # Leader Trait gained: Battle tactics
		120 = WoL.11304 # Leader Trait gained: Inspiration, logistics and sieges
		120 = WoL.11305 # Leader Trait gained: Offense vs Defense
		120 = WoL.11310 # Teach a commander one of my leader traits
		
		# Rulership Focus
		50 = WoL.12000 # The Architect
		50 = WoL.12010 # Depressed
		25 = WoL.12011 # Stressed
		50 = WoL.12027 # Farm Fire
		50 = WoL.12015 # The Murders
		50 = WoL.12028 # Witch!
		50 = WoL.12029 # Drunkard
		50 = WoL.12025 # Noble Feud
		25 = WoL.12030 # City brigands
	}
}					
					
#on combat pulse					
on_combat_pulse = {					
	random_events = {				
		300 = 0			
		100 = battle.0			
		50 = battle.2			
		25 = battle.4			
		100 = duelengine.0 # Duelengine start battle #debugging			
		100 = battle.10			
		50 = battle.12			
		25 = battle.14			
					
		100 = battle.20			
		50 = battle.22			
		25 = battle.24			
					
		50 = battle.30			
		25 = battle.32			
		12 = battle.34			
					
		20 = 96500 # Gain Combat Trait 1			
		20 = 96501 # Gain Combat Trait 2			
		20 = 96502 # Gain Combat Trait 3			
					
		50 = battle.100 # Shell-shock			
					
		300 = assassination.300 # Mid-combat backstab!			
		350 = assassination.350 # Alternative mid-combat backstab!			
					
		300 = cybernetics.10203 # Odin Glitch results in self-inflicted wound			
		300 = cybernetics.10204 # Odin Glitch results in friendly fire			
		300 = cybernetics.10206 # Odin Glitch results in sudden success!			
	}				
	events = {				
		coup.120 # Civil war defections			
	}				
}					
					
#on siege pulse					
on_siege_pulse = {					
	random_events = {				
		200000 = 0
		100 = cotc_siege.0		
		75 = 62000			
		75 = 62001			
		75 = 62003			
		75 = 62004			
		75 = 62005			
		75 = 62006			
		75 = 62007			
		75 = 62008			
		75 = 62009			
		75 = 62010			
		25 = 62014			
		75 = 62015			
		15 = 62011			
		15 = 62012			
		15 = 62013			
	}				
	events = { 				
		coup.140 # Defense commander defects			
		siege_agot.20 #waylit fight or flee - ruler			
		siege_agot.21 #waylit fight or flee - courtier			
	} 				
}					
					
#character					
on_battle_won = {					
	random_events = {				
		800 = 0			
		10 = 260 # Heroism shown
		50 = neofeudal.5 # Neofeudal Commander wins a knighthood
		10 = 261 # Soldier Distinguish himself.			
		100 = 8310 # Crusader becomes zealous			
	}
	events = {
		neofeudal.6 # Knight becomes a Gallant
		neofeudal.7 # Gallant becomes a Worthy
		neofeudal.8 # Scoring event
	}
}					
					
# any leader in battle on winning side is ROOT - opponent army leader is FROM					
on_major_battle_won = {					
	events = {				
		CM.10029 # Chronicle			
	}				
}					
					
					
on_battle_won_leader = {					
	random_events = {
		50 = neofeudal.5
	}
	events = {
		neofeudal.6
		neofeudal.7
		neofeudal.8
	}
}					
					
# Winning army leader is ROOT - opponent army leader is FROM					
on_major_battle_won_leader = {					
	events = {				
		CM.10031			
	}				
}					
					
# Winning army owner is ROOT - opponent army owner is FROM					
on_battle_won_owner = {					
}					
					
#character					
on_battle_lost = {					
	random_events = {				
		900 = 0			
		50 = 250 # Imprisoned by the enemy			
		50 = 8320 # Crusader becomes cynical			
	}				
}					
					
# Any leader in battle on losing side is ROOT - opponent army leader is FROM					
on_major_battle_lost = {					
	events = {				
		CM.10030 # Chronicle			
	}				
}					
					
on_battle_lost_leader = {					
					
}					
					
# Losing army leader ROOT - opponent army leader is FROM					
on_major_battle_lost_leader = {					
	events = {				
		CM.10032			
	}				
}					
					
# Losing army owner is ROOT - opponent army owner is FROM					
on_battle_lost_owner = {					
	events = {				
		HL.180 # Check raiding adventurer defeat			
	}				
}					
					
on_siege_won_leader = {					
	events = {				
		8330 # Conquers the crusade target			
		invasion.100 # Ordered an orbital bombardment			
		siege_agot.1 #Waylit +1 prestige for leader upon winning siege (hidden)			
		siege_agot.2 #waylit, imprison any_char at siege loc			
		siege_agot.3 #Waylit same as above, but if owner isnt home			
		siege_agot.4 #Release prisoners at location			
#		raid_events.66 #Take Salt Wife			
#		raid_events.67 #Take Sword			
#		TOG.10702 #Liberator frees slaves in camps			
#		CM.10033 # Chronicle for certain major locations			
#		CM.10034 # Chronicle for certain major locations			
#		feast_for_crows.71 # Brotherhood without Banners sieges a province			
		siege_agot.40 #inform player commander			
	}				
	random_events = {				
	}				
}					
					
on_siege_lost_leader = {					
	events = {				
		8350 # Loses the crusade target's capital			
	}				
}					
					
# Fires for the owner of the winning unit (ROOT). The taken Holding title is in FROM.					
on_siege_over_winner = {					
	events = {				
		#TOG.1005 # Peasants take county capital			
		#TOG.1025 # Heretics take county capital			
		#TOG.1045 # Nationalists take county capital			
	}				
}					
					
# Fires for all characters presumed to be in the Holding at the time. Siege winner unit owner in the 'new_character' scope, lost holding title in FROM, local character in ROOT.					
on_siege_over_loc_chars = {					
	random_events = {				
 		1000 = 0 # Nothing happens			
 		#400 = SSI.61 # Aztec sacrifice			
 		100 = 62100 # Character imprisoned			
 	}				
}					
					
#character					
on_failed_assassination = {					
	random_events = {				
 		85 = 156 # No harm done			
 		10 = 157 # Wounded			
 		5 = 158 # Maimed			
 	}				
}					
					
#character					
on_failed_assassination_disc = {					
	random_events = {				
 		85 = 159 # No harm done			
 		10 = 160 # Wounded			
 		5 = 161 # Maimed			
 	}				
}					
					
#character					
on_assassination = {					
	events = {				
 		162			
 	}				
}					
					
#character					
on_assassination_disc = {					
	events = {				
 		163			
 	}				
}					
					
# character					
on_birth = {					
	events = {
		crisis_on_birth.0
		crisis_on_birth.1
		bastard.100 # A bastard is born			
		bastard.101 # Cuckoo bastard born, alleged father not fooled			
		312 # The child of a consort is born			
		318 # A Bastard is born, but is not recognized as such by the mother's spouse (cuckoo!)			
		##TOG.3206 # Child Perceived to be Demon Born			
		maintenance.5 # Yoruba twin names			
		
	}				
	random_events = {				
		#200 = 0			
		#1 = RoI.10000 # Reincarnation?			
	}				
}					
					
# character					
on_adulthood = {					
	events = {				
		#SoA.3020 # Demon child's true nature asserts itself
		# Childhood Traits mature if they haven't yet
		ZE.13000 # Haughty
		ZE.13010 # Affectionate
		ZE.13020 # Timid
		ZE.13030 # Rowdy
		ZE.13040 # Willful
		ZE.13050 # Brooding
		ZE.13060 # Indolent
		ZE.13070 # Playful
		ZE.13080 # Conscientious
		ZE.13090 # Fussy
		ZE.13100 # Curious
		ZE.13110 # Idolizer
		
		# Resolve education and add trait
		ZE.14100 # Diplomacy
		ZE.14200 # Martial
		ZE.14300 # Stewardship
		ZE.14400 # Intrigue
		ZE.14500 # Learning
		ZE.14700 # Lack of focus

		ZE.40000 # Extra clean up of childhood traits, for incapable etc characters
	}				
}					
					
# baby scope					
on_post_birth = {					
	events = {				
		#313 # Possible complications for the mother and child			
		#314 # Possible complications for the mother after stillbirth			
	}				
}					
					
#character (at 2 months)					
on_pregnancy = {					
	events = {				
 		400 # Pregnancy in matrimony			
 		401 # Pregnancy out of wedlock			
 		402 # Pregnancy in matrimony, with another father!			
 		410 # Pregnancy as consort			
 		412 # Pregnancy as consort, with another father!			
 	}				
}					
					
#character					
on_crusade_creation = {					
	events = {				
 		200 # religious_group Crusade against transhumanist_group			
 		201 # religious_group Crusade against outlaw_group			
 		321 # religious_group Crusade against Heretics			
 		320 # transhumanist_group Jihad against religious_group			
 		322 # transhumanist_group Jihad against outlaw_group			
 		323 # transhumanist_group Jihad against Heretics			
 		324 # outlaw_group Holy War against religious_group			
 		325 # outlaw_group Holy War against transhumanist_group			
 		326 # outlaw_group Holy War against other outlaw_group			
 	}				
}					
					
# Character. 					
on_marriage = {					
	events = {				
 		500 # Royal Marriage Aid Duty			
 		501 # bio_directionist marriage			
 	}				
}					
					
#character. Triggers when someone gets imprisoned for any reason. - ROOT is prisoner, FROM is imprisoner					
on_become_imprisoned_any_reason = {					
	events = {				
		HL.190			
	}				
}					
					
#character. Triggers if someone tries to imprison someone landed and fails. This leads to an automatic war declaration(independece)					
on_avoided_imprison_started_war = {					
	events = {				
 		150 # Avoided imprison, declared independece			
 	}				
}					
					
#character. Triggers if someone becomes imprisoned by the diplo-action					
on_became_imprisoned = {					
	events = {				
 		151 # Was imprisoned			
 	}				
}					
					
#character. Triggers if someone tries to imprison someone unlanded and fails. Character is exiled to another country					
on_avoided_imprison_fled_country = {					
	events = {				
 		152			
 	}				
}					
					
#character. Triggers if someone is released from prison					
on_released_from_prison = {					
	events = {				
 		153			
 	}				
}					
					
#character. Triggers if someone is executed					
on_executed = {					
	events = {				
 		154			
 	}				
}					
					
#character. Triggers if someone is exiled					
on_exiled = {					
	events = {				
 		155			
 	}				
}					
					
#character. Fires every month for characters who are preparing an invasion.					
on_prepared_invasion_monthly = {					
	random_events = {				
		15 = 0			
		15 = 62322 	# A small force flocks to your banner		
		15 = 62320 	# A significant force flocks to your banner		
		2 = 62321 	# A Hero joins your cause with his retinue		
	}				
}					
					
#character. Fires if a prepared invasion becomes invalid.					
on_prepared_invasion_aborts = {					
	events = {				
		62300 # Handle abort			
	}				
}					
					
#character. Fires if a prepared invasion expires.					
on_prepared_invasion_expires = {					
	events = {				
		62310 # Handle expiration			
	}				
}					
					
on_death = {					
	events = {
		nepotism.1
		nepotism.0 # Automatically hands all appointed titles to the expected successor			
		
		# CotC events
		cotc_artifact.1000 # If you have any ships being commissioned, your heir now has to deal with potential complications		
					
		#laws.155 # Use a dummy character to handle patrician inheritance if necessary			
		#laws.156			
		maintenance.200 # Get rid of extra coup flags	

		#650 Clears diplomatic immunity for faction members		
		20355 # Heir inherits half of the spy network value		
		24500 # Mourning event check for dying wife		
		24502 # Mourning event check for dying son		
		
		70041 # Tournament ends if ruler dies		
		
		CM.10010 # Chronicle entry		
		CM.6185 # Dies of other causes while assassination is in progress - clear flags		
		
		ZE.1030 # Daughter becomes disobedient - killed lover		
		ZE.1040 # Daughter becomes disobedient - killed friend		
		532 #Clears regents if heir has one already		
		RIP.4400 #Nicknames for executions		
		GR.10		
		MNM.6844 #Removes mark of death block for Assassins GM		
		MNM.6991 #Clears any quests targeting this character		
		MNM.6012 #Transfers assassins debt to heir		
		MNM.1415 #Announces hermetics apprentice death		
		
		TOG.1055 # Nationalist revolter dies				
	}				
	random_events = {									
		100 = 0			
		5 = volantis.573 #Triarch Statue defaced
		1 = RIP.29800 #reincarnation investigation		
		10 = 24505 # Suspicious death		
		10 = 24510 # Death of a Councillor		
		25 = RIP.29000 #Lovers/rivals/friends react		
		100 = MNM.1207 # Hermetic Scrying vision fulfilled		
	}				
}					
					
on_merc_rampage = {					
	events = {				
 		38050			
 	}				
}					
					
on_merc_leave = {					
	events = {				
 		38051			
 	}				
}					
					
on_merc_turn_coat_from = {					
	events = {				
 		38052			
 	}				
}					
					
on_merc_turn_coat_to = {					
	events = {				
 		38053			
 	}				
}					
					
on_holy_order_leave = {					
	events = {				
 		38054			
 	}				
}					
					
#Note: Unsynchronised, this message should not execute an event which changes the gamestate to prevent out of sync					
on_letter_event_message = {					
	events = {				
		1			
	}				
}					
					
#Note: Unsynchronised, this message should not execute an event which changes the gamestate to prevent out of sync					
on_character_event_message = {					
	events = {				
		2			
	}				
}					
					
on_loot_settlement = {					
	random_events = {				
		# 5 = TOG.3300			
		# 5 = TOG.3301			
		# 5 = TOG.3302			
		# 5 = TOG.3303			
		# 35 = TOG.3320			
		250 = 0			
		
	}				
}					
					
# When someone is looting currently in a province					
# ROOT = Looter, FROM = Province					
on_loot_province = {					
	random_events = {				
		10 = flavor.5100 # Ambush passenger ship			
		10 = flavor.5200 # Attack trade ship			
		10 = flavor.5300 # Steal military technology			
		70 = 0			
	}				
}					
					
###########################					
# DIPLOMATIC NOTIFICATIONS					
###########################					
					
DEMAND_RELIGIOUS_CONVERSION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		202			
	}				
}					
					
DEMAND_RELIGIOUS_CONVERSION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		203			
	}				
}					
					
REVOKE_TITLE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		204			
	}				
}					
					
REVOKE_TITLE_INTERACTION_DECLINE_EVENT = {					
	events = {				
		205			
	}				
}					
					
OFFER_PEACE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		206			
	}				
}					
					
OFFER_PEACE_INTERACTION_DECLINE_EVENT = {					
	events = {				
		207			
	}				
}					
					
SEND_GIFT_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		208			
	}				
}					
					
SEND_GIFT_INTERACTION_DECLINE_EVENT = {					
	events = {				
		209			
	}				
}					
					
ASK_FOR_MONEY_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		#SoA.3100			
	}				
}					
					
ASK_FOR_MONEY_INTERACTION_DECLINE_EVENT = {					
	events = {				
		#SoA.3101			
	}				
}					
					
ASK_FOR_CLAIM_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		#SoA.3104			
	}				
}					
					
ASK_FOR_CLAIM_INTERACTION_DECLINE_EVENT = {					
	events = {				
		#SoA.3105			
	}				
}					
					
NOMINATE_BISHOP_TO_POPE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		#SoA.3102			
	}				
}					
					
NOMINATE_BISHOP_TO_POPE_INTERACTION_DECLINE_EVENT = {					
	events = {				
		#SoA.3103			
	}				
}					
					
					
OFFER_VASSALIZATION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		210			
	}				
}					
					
OFFER_VASSALIZATION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		211			
	}				
}					
					
ARRANGE_BETROTHAL_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		212			
	}				
}					
					
ARRANGE_BETROTHAL_INTERACTION_DECLINE_EVENT = {					
	events = {				
		213			
	}				
}					
					
ARRANGE_SUCC_BETROTHAL_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		330			
	}				
}					
					
ARRANGE_SUCC_BETROTHAL_INTERACTION_DECLINE_EVENT = {					
	events = {				
		331			
	}				
}					
					
OFFER_SUCCESSION_MARRIGE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		214			
	}				
}					
					
OFFER_SUCCESSION_MARRIGE_INTERACTION_DECLINE_EVENT = {					
	events = {				
		215			
	}				
}					
					
OFFER_MARRIGE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		216			
	}				
}					
					
OFFER_MARRIGE_INTERACTION_DECLINE_EVENT = {					
	events = {				
		217			
	}				
}					
					
RANSOM_CHARACTER_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		218			
	}				
}					
					
RANSOM_CHARACTER_INTERACTION_DECLINE_EVENT = {					
	events = {				
		219			
	}				
}					
					
EDUCATE_CHARACTER_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		220			
	}				
}					
					
EDUCATE_CHARACTER_INTERACTION_DECLINE_EVENT = {					
	events = {				
		221			
	}				
}					
					
ABANDON_AMBITION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		222			
	}				
}					
					
ABANDON_AMBITION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		223			
	}				
}					
					
STOP_BACKING_AMBITION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		224			
	}				
}					
					
STOP_BACKING_AMBITION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		225			
	}				
}					
					
JOIN_AMBITION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		226			
	}				
}					
					
JOIN_AMBITION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		227			
	}				
}					
					
GRANT_LANDED_TITLE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		228			
	}				
}					
					
GRANT_LANDED_TITLE_INTERACTION_DECLINE_EVENT = {					
	events = {				
#		229			
	}				
}					
					
APPOINT_TO_OFFICE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		230			
	}				
}					
					
APPOINT_TO_OFFICE_INTERACTION_DECLINE_EVENT = {					
	events = {				
		231			
	}				
}					
					
ASK_FOR_INVASION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		232			
	}				
}					
					
ASK_FOR_INVASION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		233			
	}				
}					
					
ASK_FOR_DIVORCE_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		234			
	}				
}					
					
ASK_FOR_DIVORCE_INTERACTION_DECLINE_EVENT = {					
	events = {				
		235			
	}				
}					
					
ASK_FOR_EXCOMMUNICATION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		236			
	}				
}					
					
ASK_FOR_EXCOMMUNICATION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		237			
	}				
}					
					
CALL_ALLY_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		238			
	}				
}					
					
CALL_ALLY_INTERACTION_DECLINE_EVENT = {					
	events = {				
		239			
	}				
}					
					
DECLARE_WAR_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		240			
		241			
	}				
}					
					
RETRACT_VASSAL_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		274			
	}				
}					
					
RETRACT_VASSAL_INTERACTION_DECLINE_EVENT = {					
	events = {				
		275			
	}				
}					
					
INVITE_TO_COURT_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		280			
	}				
}					
					
INVITE_TO_COURT_INTERACTION_DECLINE_EVENT = {					
	events = {				
		281			
	}				
}					
					
ASK_FOR_VASSALIZATION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		282			
	}				
}					
					
ASK_FOR_VASSALIZATION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		283			
	}				
}					
					
ASK_TO_LIFT_EXCOMMUNICATION_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		284			
	}				
}					
					
ASK_TO_LIFT_EXCOMMUNICATION_INTERACTION_DECLINE_EVENT = {					
	events = {				
		285			
	}				
}					
					
ASK_TO_RANSOM_CHARACTER_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		286			
	}				
}					
					
ASK_TO_RANSOM_CHARACTER_INTERACTION_DECLINE_EVENT = {					
	events = {				
		287			
	}				
}					
					
SETTLE_ADVENTURER_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		288			
		725			
	}				
}					
					
SETTLE_ADVENTURER_INTERACTION_DECLINE_EVENT = {					
	events = {				
		289			
	}				
}					
					
ASK_TO_JOIN_WAR_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		293			
	}				
}					
					
ASK_TO_JOIN_WAR_INTERACTION_DECLINE_EVENT = {					
	events = {				
		294			
	}				
}					
					
ASK_TO_EMBARGO_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		295			
	}				
}					
					
ASK_TO_EMBARGO_INTERACTION_DECLINE_EVENT = {					
	events = {				
		296			
	}				
}					
					
MAKE_CONSORT_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		297			
	}				
}					
					
MAKE_CONSORT_INTERACTION_DECLINE_EVENT = {					
	events = {				
		298			
	}				
}					
					
ABSORB_CLAN_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		503			
	}				
}					
					
ABSORB_CLAN_INTERACTION_DECLINE_EVENT = {					
	events = {				
		504			
	}				
}					
					
SPLIT_CLAN_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		509			
	}				
}					
					
SPLIT_CLAN_INTERACTION_DECLINE_EVENT = {					
	events = {				
		510			
	}				
}					
					
FORM_BLOOD_OATH_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		505			
	}				
}					
					
FORM_BLOOD_OATH_INTERACTION_DECLINE_EVENT = {					
	events = {				
		506			
	}				
}					
					
SETTLE_FEUD_INTERACTION_ACCEPT_EVENT = {					
	events = {				
		507			
	}				
}					
					
SETTLE_FEUD_INTERACTION_DECLINE_EVENT = {					
	events = {				
		508			
	}				
}					
					
# never triggered, but reserved for CB use					
on_warleader_death = {					
	events = {				
		251			
		252			
	}				
}					
					
# Respond to a proposed change of law					
on_approve_law = {					
	events = {				
		290			
	}				
}					
					
# Respond to a proposed change of de jure law					
on_approve_de_jure_law = {					
	events = {				
		291			
		292			
	}				
}					
					
# When rebels appear					
on_rebel_revolt = {					
	events = {				
		# Events are called in reverse ID order due to prerequisite issues			
		# Theocratic Rebellions			
		rebels.340			
		rebels.330			
		rebels.320			
		rebels.310			
		rebels.300			
		# Autocratic Rebellions			
		rebels.240			
		rebels.230			
		rebels.220			
		rebels.210			
		rebels.200			
		# Democratic Rebellions			
		rebels.140			
		rebels.130			
		rebels.120			
		rebels.110			
		rebels.100			
		# Protests and Riots			
		rebels.16			
		rebels.15			
		rebels.10

		# mirgrated from crisis_on_actions
		600		
		TOG.1010 		
		TOG.1030 		
		TOG.1050 		
		TOG.1070 		
		TOG.1090		
		TOG.1000 		
		TOG.1020		
		TOG.1040		
		TOG.1060		
		TOG.1080		
		HL.2010		# Minor Clan rebels reinforced
		HL.2000		# Minor Clan rebels rise up		
	}				
}					
					
# When province defects to rebels					
on_defect_to_rebels = {					
	events = {				
		610			
	}				
}					
					
# When rebels disperse					
on_defect_from_rebels = {					
	events = {				
		615			
	}				
}					
					
# When a mission succeeds					
on_crusade_success = {					
	events = {				
		620			
	}				
}					
					
# When a mission fails					
on_crusade_failure = {					
	events = {				
		621			
	}				
}					
					
# When a pagan ruler forces a prisoner to be his consort					
on_forced_consort = {					
	events = {				
		660			
	}				
}					
					
# When a pagan religion is reformed					
on_reform_religion = {					
	events = {				
		670			
	}				
}					
					
# When the religion changes in a county					
on_county_religion_change = {					
	events = {				
		#SoA.4121			
	}				
}					
					
# When a character accepts religious conversion (the diplomatic action)					
# FROMFROM is the demander. FROM is the vassal. ROOT is the character. Fires for the vassal and each of his courtiers and vassals.					
on_vassal_accepts_religious_conversion = {					
	events = {				
		39700 # Hidden event actually changing the religion
		conversion.11802 #EVENT DOESN'T EXIST IN NEW COTC OR V0.13, THIS SECTION OF ON_ACTIONS MUST HAVE BEEN ADDED FROM ANOTHER MOD?
	}				
}					
					
# A heresy has become the new norm, replacing the old orthodoxy					
on_heresy_takeover = {					
	events = {				
		#SoA.4200			
	}				
}					
					
# Fires for a newly elected Doge. FROM is the previous (dying or abdicating) doge.					
on_become_doge = {					
	events = {				
		#701			
		maintenance.550 # Tentative fix for the Infinite Money Bug			
		maintenance.900 # Update the senate			
					
		# Handle election results			
		laws.5217			
					
		# Don't not be a doge			
		government.50			
		volantis.301

		parliaments.001		
	}				
}					
					
on_elective_gavelkind_succession = {					
	events = {				
		63103			
	}				
}					
					
# Fires when a navy moves into a port. Starts in unit scope, FROM is the owner.					
on_entering_port = {					
	events = {				
		#700			
	}				
}					
					
# Fires when a cardinal is elected. SoA only! FROM is the Religious head.					
on_rel_elector_chosen = {					
}					
					
# Fires when a Pope is elected. SoA only! FROM is the previous Religious Head					
on_rel_head_chosen = {					
	events = {				
		#704			
	}				
}					
					
# ROOT is the looter, FROM is the settlement title					
on_settlement_looted = {					
}					
					
# ROOT is the navy's owner, FROM is the province					
on_navy_returns_with_loot = {					
}					
					
# ROOT is the creating character, FROM is the title					
on_create_title = {					
	events = {				
		maintenance.900 # Update the senate
		maintenance.450
		maintenance.451
		
		CM.10021		
		CM.1501
		
		parliaments.001
	}				
}					
					
# ROOT is the character, FROM is the title, FROMFROM is the old holder					
on_new_holder = {					
	events = {				
		# Check for Feudal Merchant Republics			
		maintenance.550			
					
		# Inherit old constitutional crises			
		laws.10			
		laws.20			
		laws.30			
		royal_proclamations.999 #Royal Proclamations			
		maintenance.900 # Update the senate every time a title changes			
					
		# Election-related			
		laws.5500			
		laws.5115			
		laws.5215
		parliaments.001		

		# mirgrated from crisis_on_actions
		HL.4999 #Preserve Nomad Culture		
		HL.4996 #Clear Nomad Agitation when conquered by a non-nomad		
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest		
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad		
		HL.140 #Landless nomad gains a title.		
		60504 #Landless status clean-up for e_mongol_empire.		
		#ZE.7000 #Check for Gain Any Title ambition.		
		Plus.351 # Adds province chaos modifier		
		Plus.356 # Removes claims for dead rulers		
		ZE.6010 #ambition event for unlanded son.		
		RIP.12098 #check if we need to remove in_seclusion.		
		RIP.11715 #Removes crown focus on new holder		
		533		

		SSI.40 #Aztecs conquer X events		
		SSI.41		
		SSI.42		
		SSI.43		
		SSI.44		
		SSI.45		
		SSI.46		
		SSI.47		
		SSI.48		
		
		# Clean up zoroastrian pets on province modifiers in case capital lost		
		ZP.6 	
		
	}				
}					
					
# ROOT is the character, FROM is the title, FROMFROM is the old holder					
on_new_holder_inheritance = {					
	events = {				
		# Check for Feudal Merchant Republics			
		maintenance.550			
					
		# Inherit old constitutional crises			
		laws.10			
		laws.20			
		laws.30			
		royal_proclamations.999 #Royal Proclamations			
		# Election-related			
		laws.5500			
		laws.5115			
		laws.5215			
		volantis.280 #check volantis liege	

		# mirgrated from crisis_on_actions
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest		
		CM.10039 #Chronicle entry		
		HL.140 #Landless nomad gains a title.		
		60504 #Landless status clean-up for e_mongol_empire.		
		RIP.11715 #Removes crown focus on new holder		
		533		
		
		43305 #handle tyranny for going against council		
		Plus.2111 # Initialization event for Bogomilist laws		
		Plus.368 # Deal with landed Varangians		
		ancrel.144 # Cleanup for a Fian/Son of Gwydion that inherits a title		
		
		SSI.40 #Aztecs conquer X events		
		SSI.41		
		SSI.42		
		SSI.43		
		SSI.44		
		SSI.45		
		SSI.46		
		SSI.47		
		SSI.48				
		
		
		ZE.6010 #ambition event for unlanded son.

		parliaments.001		
	}				
}					
					
# ROOT is the character, FROM is the title, FROMFROM is the old holder					
on_new_holder_usurpation = {					
	events = {				
		# Check for Feudal Merchant Republics			
		maintenance.550			
					
		# Inherit old constitutional crises			
		laws.10			
		laws.20			
		laws.30			
		royal_proclamations.999 #Royal Proclamations			
		# Possible intervention by liege			
		usurpation.200			
					
		# Election-related			
		laws.5500			
		laws.5115			
		laws.5215			
					
		# Assign appropriate government type			
		government.2000			
		government.2100			
		government.2200			
		government.2300			
		government.2400			
		government.2500			
		government.2600			
		government.2700			
		government.2800			
		government.2900			
		government.2950			
		#military.3004			
		volantis.301	

		# mirgrated from crisis_on_actions
		HL.4999 #Preserve Nomad Culture		
		HL.4996 #Clear Nomad Agitation when conquered by a non-nomad		
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest		
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad		
		HL.140 # Landless nomad gains a title.		
		CM.10022		
		60504 # Landless status clean-up for e_mongol_empire.		
		RIP.11715 #Removes crown focus on new holder		
		533		
		
		43305 #handle tyranny for going against council		
	
		SSI.40 #Aztecs conquer X events		
		SSI.41		
		SSI.42		
		SSI.43		
		SSI.44		
		SSI.45		
		SSI.46		
		SSI.47		
		SSI.48

		parliaments.001	
		dynastic_stability.1		
	}				
}					
					
on_unlanded = {					
	events = {				
		HL.130 #Landless nomad clean-up.			
		volantis.575 #Triarch statue defaced
		#HL.130 # Landless nomad clean-up.					
	}				
}					
					
					
# Fires at the end of each year if the chronicle is empty					
on_create_chronicle_if_empty = {					
}					
					
# Fires when the player changes character					
# FROM is the old character, ROOT is the new holder					
on_chronicle_owner_change = {					
}					
					
# Fires when the game starts (not from saves)					
on_chronicle_start = {					
	events = {				
		startup.0 # Fixing immortality trait bug			
		startup.1 # Calculate initial senates			
	}				
}					
					
# Character converts religion, for whatever reason. ROOT is the character after conversion and the FROM scope has the old religion.					
on_character_convert_religion = {					
	events = {				
		#CM.10026			
		671 #set rival conversion flag if eligible			
		government.3000			
	}				
}					
					
# Character converts culture, for whatever reason. ROOT is the character after conversion and the FROM scope has the old culture.					
on_character_convert_culture = {					
	events = {				
		#CM.10027			
	}				
}					
					
on_acquire_nickname = {					
	events = {				
		#CM.10028			
	}				
}					
					
# Fires for vassals that can become independent as a result of liege being over vassal limit					
on_over_vassal_limit_succession = {					
	events = {				
		63100			
	}				
}					
					
# From = Attacker, Root = Defender					
on_war_started = {					
	events = {				
		#CM.10012			
		volantis.9100 #Triarchs can veto	
		CM.10012			
		43303 #check for tyranny from going against council			
	}				
}					
					
# From = Attacker, Root = Defender					
on_war_ended_victory = {					
	events = {				
		#CM.10038			
		volantis.350 #check for volantene election
		CM.10038				
		SSI.105				
	}				
}					
					
# From = Attacker, Root = Defender					
on_war_ended_whitepeace = {					
	events = {				
		#CM.10040			
		volantis.350 #check for volantene election
		CM.10040		
	}				
}					
					
# From = Attacker, Root = Defender					
on_war_ended_defeat = {					
	events = {				
		#CM.10041			
		volantis.350 #check for volantene election
		CM.10041		
	}				
}					
# From = Attacker, Root = Defender					
on_war_ended_invalid = {					
	events = {				
		volantis.350 #check for volantene election			
	}				
}					
# From = Divorcer, Root = Spouse, New = Religious head if applicable					
on_divorce = {					
	events = {				
		717 # Achievement			
		CM.10037			
	}				
}					
					
# ROOT = Builder, FROM = Title					
on_settlement_construction_start = {					
}					
					
# ROOT = Builder, FROM = Title					
on_settlement_construction_completed = {					
	events = {				
		HL.3			
		HL.4			
	}				
}					
					
# ROOT = Starter, FROM = Target 					
on_feud_started = {					
	events = {				
		HL.6			
	}				
}					
					
# ROOT = Ender, FROM = Target 					
on_feud_ended = {					
}					
					
on_blood_brother_death = {					
	events = {				
		HL.10			
	}				
}					
					
# ROOT = AI character					
on_ai_end_raid = {					
	events = {				
		HL.191			
	}				
}					

on_adolescence = { # Checked on 12th birthday.		
	events = {	
		reeducation.20 # Conclave version of reeducation.1
		reeducation.23 # Child is a prodigy
		ZE.12998 # Clear childhood event chain flags
		MNM.3429 # Educator/guardian/parent with secret religion get a chance to convince child to convert secretly
	}	
	random_events = {	
		#1 = reeducation.23 # Child is a prodigy
	}	
}

#childhood - pulse fires at ages 6 years plus six months, 8 years plus six months and 10 years plus six months		
on_childhood_pulse = {		
	events = {	
		reeducation.25 #find better guardian
		
	}	
	
	random_events = {	
		350 = reeducation.11 #Grew up together.
	}	
}		

#adolescence - pulse fires at ages 12 years plus six months and 14 years plus six months		
on_adolescence_pulse = {		
	
	events = {	
		reeducation.25 #find better guardian
		reeducation.11 #Grew up together.
	}	
	
	random_events = {	
		700 = reeducation.11 #Grew up together.
	}	
}

# Fires every two years for characters who are members of any society
on_society_bi_yearly_pulse = {
	events = {
		MNM.6199 # Assassins quest tombola
		MNM.7200 # Devil Worshipers quest tombola
		MNM.4000 # Monastic order quest tombola
		MNM.3000 # Secret religious society quest tombola
		MNM.1000 # Hermetics quest tombola
		MNM.7000 # Devil Worshipers: soul corruption chance
		bank.50	 # Banking society quest tombola
	}
	
	random_events = {
		50 = MNM.10020 # Criminal societies: stressed
		100 = MNM.20000 # Devil Worshippers: Orgy
		100 = MNM.20010 # Devil Worshippers: Night on the Town
		75 = MNM.20030 # Devil Worshippers: Grand Summoning
		100 = MNM.20040 # Devil Worshippers: Impersonating Priests
		100 = MNM.20060 # Devil Worshippers: Infernal Choir (only with Rivals)
		75 = MNM.7854 # Devil Worshipers: Demon Hunters Attack
		100 = MNM.6899 # Assassins: friend or foe?
		100 = MNM.6910 # Assassins: assisting a murder plot
		50 = MNM.6920 # Assassins: blackmailing superior
		100 = MNM.3260 # Monastic Orders: Advising a Poet
		100 = MNM.4200 # Monastic Orders: Learning about Roses
		100 = MNM.4210 # Monastic Orders: Fellow member drowsing off
		100 = MNM.4435 # Monastic Orders: Friendship & Love
		100 = MNM.4217 # Monastic Order: Burn heretical books
		50 = MNM.4610 # Monastic Orders: Monastery has Artifact
		100 = MNM.3920 # Secret Religious societies: Worried member
		100 = MNM.3930 # Secret Religious societies: Fellow society member goes for a round
		100 = MNM.3505 # Secret Religious societies: Get help from another member with problematic trait
		100 = MNM.3500 # Secret Religious societies: I am so stressed
		50 = MNM.1620 # Hermetic Society: Divine Summoning
		50 = MNM.1460 # Hermetic Society: Gathering of the Minds
		50 = MNM.5110 # Hermetic Society: Warding off Evil
		50 = MNM.10040 # Every society: Gain rival
		50 = MNM.10043 # Every society: Gain friend (or possibly lover...?)
		150 = 0 # Nothing
	}
}

# A character has switched their society interest
# Root = Character
# From = Society
on_character_switch_society_interest = {
	events = {
		MNM.10010
		MNM.10024 # Backup for refounding societies
	}
}

# A character ranks up in their society, or becomes grandmaster
# Root = Character
# From = Society
on_character_society_rank_up = {
	events = {
		735 # Dark Lord achievement
		736 # Birthright achievement
		737 # Jihad Sultan achievement
		MNM.1750 # Grandmaster notification event
	}
}

# A character ranks down in their society
# Root = Character
# From = Society
on_character_society_rank_down = {
	events = {
	}
}

# A character joins a society. The has_game_started trigger can be useful to avoid firing events from auto-assignment of characters at game start
# Root = Character
# From = Society
on_character_join_society = {
	events = {
	}
}

# A character leaves or is forced to leave a society
# Root = Character
# From = Society
on_character_leave_society = {
	events = {
		MNM.10018 #clears on-going event flags and effects
		MNM.1611 # Clears Apprentice minor titles
		bank.10 #Cashout
	}
}
# A character asks to join a society. Only works on player
# Root = Character
# From = Society
on_character_ask_to_join_society = {
	events = {
		MNM.4450 #Join Monastic Order
		MNM.100 #Join Hermetics
		MNM.10024 # Backup for refounding societies
		bank.66 #Join Bankers
	}
}

# A character is removed from society for failing the potential trigger.
# Root = Character
# From = Society
on_character_kicked_from_society = {
	events = {
		MNM.10021
	}
}

# A character stops showing interest in a society for failing the CanJoin trigger.
# Root = Character
# From = Society
on_character_stop_showing_interest = {
	events = {
		MNM.10019
	}
}

# Someone joins a society that has no members
# Root = Character
# From = Society
on_society_created = {
	events = {
	}
}

# The last member of a society leaves the society and is not replaced
# Root = Character
# From = Society
on_society_destroyed = {
	events = {
	}
}

# A character selects a focus
# Root = Character
on_focus_selected = {
	events = {
		# HF.25506
		# HF.25507
		# HF.25508
		# HF.25509
	}
}

# A character succeeds in a quest. This happens just before the quest disappears, so you can access the quest itself. Only invoked when a quest is cleared via script. E.G., does not happen on death
# Root = Character
on_quest_success = {
	events = {
		MNM.6666
	}
}

# A character fails a quest. This happens just before the quest disappears, so you can access the quest itself. Only invoked when a quest is cleared via script. E.G., does not happen on death
# Root = Character
on_quest_failure = {
	events = {
		MNM.6667
	}
}

# An indestructible society failed to find a new leader from existing characters
# Root = Society
# From = Previous leader
on_society_failed_to_find_new_leader = {
	events = {
	}
}


# Root = New artifact owner
# From = inherited artifact
# FromFrom = Previous owner
on_artifact_inheritance = {
	random_events = {
		# 5 = HFP.16005 # old destruction risk
		# 95 = 0 # nothing happens
	}
	events = {
		cotc_artifact.1 # Minor artifacts have maintenance fees, and can be handed out to courtiers.
		cotc_artifact.3 # Ships have a larger maintenance fee, and can also be handed out to courtiers.
		# MNM.5107 # for inheriting ingredients
	}
}

# An offmap power changes its policy. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_policy_changed = {
	events = {
		# JD.30501 # Print policy update to logs
		# JD.50020 # News from China about Policy Change
		# JD.50400 # Update Silk Road values
		# JD.32298 # Abandon kowtow when China goes Isolationist
	}
}

# An offmap power changes its status. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_status_changed = {
	events = {
		# JD.30502 # Print status update to logs
		# JD.50030 # News from China about Status Change
		# JD.50400 # Update Silk Road values
	}
}


# An offmap power changes its governor. Triggers for the new governor
# Root = New governor
# From = Old governor
# FromFrom = Offmap
on_offmap_governor_changed = {
	events = {
	}
}

# An offmap power changes its ruler. Triggers for the new ruler
# Root = New ruler
# From = Old ruler
# FromFrom = Offmap
on_offmap_ruler_changed = {
	events = {
		# JD.30503 # Logging new ruler data
		# JD.10005 # In case of dynasty change...
		# JD.10202 # Delayed cleanup event. Makes sure the new administration may also launch Chinese invasions.
		# JD.50000 # Select a new Policy and send News Event
		# JD.31000 # Logging for emperor statistics
	}
}

# Happens once a month on a random day. Triggers for the governor
# Root = Governor
# From = Offmap
on_offmap_monthly_pulse = {
	events = {
		# JD.10121 #Fallback event to make sure that Displaced Royals, Jurchen Invaders, and Rebel Generals actually appear (regardless of new administration in China or not)
	}
	random_events = {
	}
}

# Happens once a year during a random monthly update. Triggers for the governor (once for each offmap governor, if there's more than one)
# Root = Governor
# From = Offmap
on_offmap_yearly_pulse = {
	events = {
		# JD.10100 # Chinese Invasion tombola
		# #JD.40000 # Chinese Trade Competition
		# JD.30500 # China logging variable increment
		# JD.10200 # Chinese Invasion clean-up event - REGULAR (tributary invasion + other flags)
		# JD.10201 # Chinese Invasion clean-up event - MAJOR Invasion (rare)
	}
	
	# random_events = {
		# 10000 = 0
		# 300 = JD.50100 # Status returns to 'Stable'
		# 150 = JD.50120 # Status changes to 'Unrest'
		# 50 = JD.50140 # Status changes to 'Mongol Invasion'
		# 450 = JD.50160 # 'Mongol Invasion' Resolution
		# 50 = JD.50180 # Status changes to 'Jurchen Invasion'
		# 450 = JD.50200 # 'Jurchen Invasion' Resolution
		# 100 = JD.50220 # Status changes to 'Great Famine'
		# 100 = JD.50240 # Status changes to 'Devastating Plague'
		# 100 = JD.50260 # Status changes to 'Golden Age'
		# 350 = JD.50280 # Status changes to 'Civil War'
		# 400 = JD.50300 # 'Civil War' Resolution
	# }
}

# Happens just prior to the EU4 converter converting the game
# Root = Player. Random character if in observe mode
on_eu4_conversion_start = {
	events = {
		# JD.60205 # Prepare on map China for conversion
	}
}

# Happens just after the EU4 converter is done converting the game
# Root = Player. Random character if in observe mode
on_eu4_conversion_done = {
	events = {
		# JD.60206 # Restore on map China after conversion
	}
}

# Happens when tyranny is caused by the code rather than script. That is; won't trigger if you use "add_opinion_modifier" to add tyranny. Fires for every character that gets the "tyrant" opinion penalty towards the tyrant
# Root = Upset character
# From = Tyrant
on_tyranny_gained = {
	events = {
	}
}

# Happens when tyranny is caused by the code rather than script. That is; won't trigger if you use "add_opinion_modifier" to add tyranny. Only happens for the tyrant themselves, rather than for each of their "victims", so happens exactly once per tyranny-giving action
# Root = Tyrant
on_tyranny_gained_tyrant_only = {
	events = {
	}
}

# Triggers if someone tries to revoke someone's title, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
# FromFrom = The title being revoked
on_revoke_attempted_started_war = {
	events = {
		# 681
 	}
}

# Triggers if someone tries to retract someone's vassal, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
# FromFrom = The vassal title being retracted
on_retract_vassal_attempted_started_war = {
	events = {
		# 682
 	}
}

# Triggers if someone tries to absorb a clan, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
on_absorb_clan_attempted_started_war = {
	events = {
		# 683
 	}
}

# Triggers if someone tries to split a clan, and the person refuses and starts a war in response
# Root = The person declaring war
# From = The revoker
on_split_clan_attempted_started_war = {
	events = {
		# 684
 	}
}

# Triggers if the game is started with Random/Shattered World. Fires at the very end of game setup (just before the Welcome screen is shown)
# Root = The very first character generated (events need a character to work)
on_alternate_start = {
	events = {
	}
}

# Triggers when the society progress is decreased / set to the value 0
# Root = The affected society grandmaster
# From = The affected society
on_society_progress_zero = {
	events = {
	}
}

# Triggers on a betrothal being agreed. Sent to employers of both parties
# Root = Employer of the character getting betrothed
# From = Character getting betrothed in the court of Root
# new_character = The other character getting betrothed
on_betrothal = {
	events = {
	}
}

# Triggers when the society progress is increased / set to the value 100
# Root = The affected society grandmaster
# From = The affected society
on_society_progress_full = {
	events = {
		# HF.11999
	}
}

# Triggers for all characters in a unit (leading a flank or subunit) when it enters a province
# Root = the affected character
on_unit_entering_province = {
	events = {
		# 8300
		# 8301
		# 8468
		# 8469
		# 8305
		# HFP.42320
		# HF.49121 # Northern Crusade flavor
	}
}

# Triggers for character when they are put in command of a flank
# Root = the affected character
on_command_unit = {
	events = {
		# 8300
		# 8301
		# 8468
		# 8469
		# 8305
	}
}

# Triggers for character when they are put in command of a subunit
# Root = the affected character
on_command_sub_unit = {
	events = {
		# 8300
		# 8301
		# 8468
		# 8469
		# 8305
	}
}

# Triggers when Crusade preparation starts
# Root = the religious head
# Warning - This fires for all Crusades / Jihads / Great Holy Wars upon creation regardless if they have a preparation phase - Use "uses_new_crusade = yes" trigger to limit effects
on_crusade_preparation_starts = {
	events = {
		# HFP.41000
		# HFP.41003
		# HFP.41005
		# HFP.41021
		# HFP.41070
		# HFP.41080
		# HFP.41081
		# HF.49000
	}
}

# Triggers when Crusade preparation ends
# Root = the religious head
on_crusade_launches = {
	events = {
		# HFP.41008
		# HFP.41083
		# HFP.41130
		# HFP.41140
		# HF.49006
		# HFP.49122 # For dealing with pesky NAP breakers...
	}
}

# Triggers when a Crusade is canceled
# Root = the religious head
on_crusade_canceled = {
	events = {
		# HFP.41010
	}
}

# Triggers once a month while a Crusade is preparing or active
# Root = the religious head
on_crusade_monthly = {
	events = {
		# HFP.41006
		# HFP.41012
		# HFP.41020
		# HFP.41050
		# HFP.41052
		# HFP.41055
		# HFP.41073
		# HFP.41074
		# HFP.41086
		# HFP.42200
	}
}

# Triggers when the target of a crusade changes (either through script or invalidation, or the target's heir inheriting). Happens immediately after the crusade_target_char and crusade_target_title scopes are updated
# Root = the religious head
# From = the previous target character
# FromFrom = the previous target title
# FromFromFrom = the character who made the change, if via diplomatic action. Otherwise not defined
on_crusade_target_changes = {
	events = {
		# HFP.41000
		# HFP.41072
	}
}

# Triggers when a character pledges their participation. Triggers even if the war has started. Does *not* trigger when the character is auto-pledged due to joining the war
# Root = the character pledging
on_pledge_crusade_participation = {
	events = {
		# HFP.41030
	}
}

# Triggers when a character pledges their defense of the crusade target. Triggers even if the war has started. Does *not* trigger when the character is auto-pledged due to joining the war
# Root = the character pledging
on_pledge_crusade_defense = {
	events = {
	}
}

# Triggers when a character unpledges their participation, including the automatic unpledging on death and conversion
# Root = the character unpledging
on_unpledge_crusade_participation = {
	events = {
		# HFP.41040
	}
}

# Triggers when a character unpledges their defense, including the automatic unpledging on death and conversion
# Root = the character unpledging
on_unpledge_crusade_defense = {
	events = {
	}
}

# Triggers when someone is excommunicated via the hardcoded diplomatic interaction
# Root = Excommunicated person
# From = Asker
# FromFrom = Pope
on_excommunicate_interaction = {
	events = {
		# HFP.23002 #Add opinion modifier to prevent excommunication spamming.
	}
}

# Triggers when a player renames a character. Note that the player is not provided as a scope. This includes the "newborn" event
# Root = The renamed character
on_character_renamed = {
	events = {
	}
}

# Triggers when a player renames a title. Note that the player is not provided as a scope. This includes renaming via the title screen
# Root = The renamed title
on_title_renamed = {
	events = {
	}
}

# Triggers when a player renames a province. Note that the player is not provided as a scope. This includes renaming via the province view
# Root = The renamed character
on_province_renamed = {
	events = {
	}
}

# Triggers when a player renames a wonder.
#ROOT = owner
#FROM = upgrade
#FROMFROM = The renamed wonder
#FROMFROMFROM = province (location of wonder)
on_wonder_renamed = {
	events = {
	}
}

# Triggers when a player renames an artifact. Note that the player is not provided as a scope
# Root = The renamed artifact
on_artifact_renamed = {
	events = {
	}
}

# Triggers when a player renames a bloodline. Note that the player is not provided as a scope
# Root = The renamed bloodline
on_bloodline_renamed = {
	events = {
	}
}

# Triggers when a change of employer has been detected. Note that the from scope is empty for newly created characters.
# Root = character that got a new employer
# From = previous employer
# FromFrom = new employer
on_employer_change = {
	events = {
		# HFP.19000 # For safety, to prevent everlasting food-shortage from Seclusion
	}
}

# Triggers when a change of host has been detected. Note that the from scope is empty for newly created characters. "on_employer_change" is triggered first if a character has had both their employer and host changed since the last check was made.
# Root = the character that got a new host
# From = the previous host
# FromFrom = new employer
on_host_change = {
	events = {
		# HFP.19000 # For safety, to prevent everlasting food-shortage from Seclusion
	}
}

# Triggers when a character becomes the owner of a wonder.
# ROOT = new owner
# FROM = wonder
# FROMFROM = previous owner (this person might be dead or whatever, but still needed)
# FROMFROMFROM = province wonder is in
on_wonder_owner_change = {
	events = {
	}
	# random_events = {
		# 1000 = 0
		# delayed_upgrade_finish_effects = {
			# delay = 14
			# 50 = LT.60401 #Traps kill courtiers from new court
		# }
	# }
}

# Triggers when a wonder begins construction of any stage.
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_construction_start = {
	events = {
	}
	# random_events = {
		# 1000 = 0
		# 100 = LT.20100 #Tomb is found during construction
	# }
}

# Triggers when a wonder finishes building a stage.
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_stage_finish = {
	events = {
		# LT.10000
	}
}

# Triggers when a wonder is destroyed.
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_destroyed = {
	events = {

	}
}

# Triggers when construction of an upgrade begins in a wonder.
# ROOT = owner
# FROM = upgrade
# FROMFROM = wonder
# FROMFROMFROM = province (location of wonder)
on_wonder_upgrade_start = {
	events = {
	}
}

# Triggers when construction of an upgrade finishes in a wonder.
# ROOT = owner
# FROM = upgrade
# FROMFROM = wonder
# FROMFROMFROM = province (location of wonder)
on_wonder_upgrade_finish = {
	events = {
		# LT.10001
		# LT.20700 #upgrade_strategic_exclaves effect to build maximum fortification in province holdings
		# LT.10003 # Handles setting desc of upgrades using dynamic loc keys
	}
	# random_events = {
		# 1000 = 0
		# delayed_upgrade_finish_effects = {
			# delay = 50
			# 100 = LT.60001 #Town springs up
		# }
	# }
# }

# Triggers when an upgrade is destroyed in a wonder.
# ROOT = owner
# FROM = upgrade
# FROMFROM = wonder
# FROMFROMFROM = province (location of wonder)
on_wonder_upgrade_destroyed = {
	events = {
	}
}

# Triggers when looting of a wonder begins
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_loot_start = {
	events = {
		# LT.20799 #Looting renaming prep-event
		# LT.20800 #Artifact looting
	}
	# random_events = {
		# 100 = 0
		# delayed_upgrade_finish_effects = {
			# delay = 2
			# 100 = LT.20810
		# }
	# }
}

# Triggers when looting of a wonder stage is started
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_stage_loot_start = {
	events = {
	}
}

# Triggers when looting of a wonder stage is completed
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_stage_loot_finish = {
	events = {
		# LT.10002 # Renames wonders and sets desc for Ruined versions
		# LT.20820 # Notification for the owner that looting stage finished
	}
}

# Triggers when restoration of a wonder begins
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_restore_start = {
	events = {
	}
}

# Triggers when restoration of a wonder completed
# ROOT = owner
# FROM = wonder
# FROMFROM = province (location of wonder)
on_wonder_restore_finish = {
	events = {
		#LT.20808 # clean up looted_artifact flag
	}
}